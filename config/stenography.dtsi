#include "keypos.h"

/ {
     steno_macros {
        m_because: m_because {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp B &kp E &kp C &kp A &kp U &kp S &kp E &kp SPACE>;
        };

        m_necessary: m_necessary {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp N &kp E &kp C &kp E &kp S &kp S &kp A &kp R &kp Y &kp SPACE>;
        };

        m_experience: m_experience {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp E &kp X &kp P &kp E &kp R &kp I &kp E &kp N &kp C &kp E>;
        };

        m_consider: m_consider {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp O &kp N &kp S &kp I &kp D &kp E &kp R>;
        };

        m_determin: m_determin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp D &kp E &kp T &kp E &kp M &kp I &kp N>;
        };

        m_subject: m_subject {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp S &kp U &kp B &kp J &kp E &kp C &kp T>;
        };

        m_character: m_character {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp H &kp A &kp R &kp A &kp C &kp T &kp E &kp R>;
        };

        m_temperature: m_temperature {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp T &kp E &kp M &kp P &kp E &kp R &kp A &kp T &kp U &kp R &kp E>;
        };

        m_brother: m_brother {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp B &kp R &kp O &kp T &kp H &kp E &kp R>;
        };

        m_sister: m_sister {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp S &kp I &kp S &kp T &kp E &kp R>;
        };

        m_express: m_express {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp E &kp X &kp R &kp E &kp S &kp S>;
        };

        m_instruct: m_instruct {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp I &kp N &kp S &kp T &kp R &kp U &kp C &kp T>;
        };

        m_syllable: m_syllable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp S &kp Y &kp L &kp L &kp A &kp B &kp L &kp E>;
        };

        m_mountain: m_mountain {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp M &kp O &kp U &kp N &kp T &kp A &kp I &kp N>;
        };

        m_particular: m_particular {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp P &kp A &kp R &kp T &kp I &kp C &kp U &kp L &kp A &kp R>;
        };

        m_const: m_const {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp O &kp N &kp S &kp T>;
        };
     };
  
    steno_combos {
        compatible = "zmk,combos";

        c_because {
            timeout-ms = <50>;
            key-positions = <P_E P_B>; 
            bindings = <&m_because>;
            layers = <0>;
        };

        c_necessary {
            timeout-ms = <50>;
            key-positions = <P_N P_E P_C>; 
            bindings = <&m_necessary>;
            layers = <0>;
        };

        c_experience {
            timeout-ms = <50>;
            key-positions = <P_X P_P>; 
            bindings = <&m_experience>;
            layers = <0>;
        };

        c_consider {
            timeout-ms = <50>;
            key-positions = <P_C P_O P_N P_S>; 
            bindings = <&m_consider>;
            layers = <0>;
        };

        c_determin {
            timeout-ms = <50>;
            key-positions = <P_D P_E P_T P_R>; 
            bindings = <&m_determin>;
            layers = <0>;
        };

        c_subject {
            timeout-ms = <50>;
            key-positions = <P_S P_U P_B P_J>; 
            bindings = <&m_subject>;
            layers = <0>;
        };

        c_character {
            timeout-ms = <50>;
            key-positions = <P_C P_H P_A P_R>; 
            bindings = <&m_character>;
            layers = <0>;
        };

        c_temperature {
            timeout-ms = <50>;
            key-positions = <P_T P_E P_M P_P>; 
            bindings = <&m_temperature>;
            layers = <0>;
        };

        c_brother {
            timeout-ms = <50>;
            key-positions = <P_B P_R P_O>;
            bindings = <&m_brother>;
            layers = <0>;
        };

        c_sister {
            timeout-ms = <50>;
            key-positions = <P_S P_I P_R P_T>;
            bindings = <&m_sister>;
            layers = <0>;
        };

        c_express {
            timeout-ms = <50>;
            key-positions = <P_E P_X P_S>;
            bindings = <&m_express>;
            layers = <0>;
        };

        c_instruct {
            timeout-ms = <50>;
            key-positions = <P_I P_N P_S P_T P_U>;
            bindings = <&m_instruct>;
            layers = <0>;
        };

        c_syllable {
            timeout-ms = <50>;
            key-positions = <P_S P_Y P_L P_A>;
            bindings = <&m_syllable>;
            layers = <0>;
        };

        c_mountain {
            timeout-ms = <50>;
            key-positions = <P_M P_O P_U P_T P_A>;
            bindings = <&m_mountain>;
            layers = <0>;
        };

        c_particular {
            timeout-ms = <50>;
            key-positions = <P_P P_A P_R P_T>;
            bindings = <&m_particular>;
            layers = <0>;
        };

        c_const {
            timeout-ms = <50>;
            key-positions = <P_C P_O P_N P_S P_T>;
            bindings = <&m_const>;
            layers = <0>;
        };
    };
};


