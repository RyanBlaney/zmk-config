
#include "keypos.h"

/ {
    steno_macros {
      m_professional: m_professional {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp P &kp R &kp O &kp F &kp E &kp S &kp S &kp I &kp O &kp N &kp A &kp L>;
      };

      m_information: m_information {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp I &kp N &kp F &kp O &kp R &kp M &kp A &kp T &kp I &kp O &kp N>;
      };

      m_experience: m_experience {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp E &kp X &kp P &kp E &kp R &kp I &kp E &kp N &kp C &kp E>;
      };

      m_because: m_because {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp B &kp E &kp C &kp A &kp U &kp S &kp E>;
      };

      m_development: m_development {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp D &kp E &kp V &kp E &kp L &kp O &kp P &kp M &kp E &kp N &kp T>;
      };

      m_govern: m_govern {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp G &kp O &kp V &kp E &kp R &kp N>;
      };

      m_government_: m_government_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp G &kp O &kp V &kp E &kp R &kp N &kp M &kp E &kp N &kp T &kp SPACE>;
      };

      m_example: m_example {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp E &kp X &kp A &kp M &kp P &kp L &kp E>;
      };

      m_important: m_important {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp I &kp M &kp P &kp O &kp R &kp T &kp A &kp N &kp T>;
      };

      m_difference_: m_difference_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp D &kp I &kp F &kp F &kp E &kp R &kp E &kp N &kp C &kp E &kp SPACE>;
      };

      m_different_: m_different_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp D &kp I &kp F &kp F &kp E &kp R &kp E &kp N &kp T &kp SPACE>;
      };

      m_between_: m_between_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp B &kp E &kp T &kp W &kp E &kp E &kp N &kp SPACE>;
      };

      m_ous: m_ous {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp O &kp U &kp S>;
      };

      m_ment: m_ment {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp M &kp E &kp N &kp T>;
      };

      m_ing: m_ing {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp I &kp N &kp G>;
      };

      m_ness: m_ness {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp N &kp E &kp S &kp S>;
      };

      m_post: m_post {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp P &kp O &kp S &kp T>;
      };

      m_pre: m_pre {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp P &kp R &kp E>;
      };

      m_con: m_con {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp C &kp O &kp N>;
      };

      m_should: m_should {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp S &kp H &kp O &kp U &kp L &kp D>;
      };

      m_could: m_could {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp C &kp O &kp U &kp L &kp D>;
      };

      m_would: m_would {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp W &kp O &kp U &kp L &kp D>;
      };

      m_about_: m_about_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp A &kp B &kp O &kp U &kp T &kp SPACE>;
      };

      m_through: m_through {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp T &kp H &kp R &kp O &kp U &kp G &kp H>;
      };

      m_people_: m_people_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp P &kp E &kp O &kp P &kp L &kp E &kp SPACE>;
      };

      m_their_: m_their_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp T &kp H &kp E &kp I &kp R &kp SPACE>;
      };

      m_which_: m_which_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp W &kp H &kp I &kp C &kp H &kp SPACE>;
      };

      m_from_: m_from_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp F &kp R &kp O &kp M &kp SPACE>;
      };

      m_and_: m_and_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp A &kp N &kp D &kp SPACE>;
      };

      m_the_: m_the_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp T &kp H &kp E &kp SPACE>;
      };

      m_with_: m_with_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp W &kp I &kp T &kp H &kp SPACE>;
      };

      m_ation_: m_ation_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp A &kp T &kp I &kp O &kp N &kp SPACE>;
      };

      m_ization_: m_ization_ {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <10>;
        bindings = <&macro_tap &kp I &kp Z &kp A &kp T &kp I &kp O &kp N &kp SPACE>;
      };


    };

    steno_combos {
      compatible = "zmk,combos";
      c_professional {
        timeout-ms = <50>;
        key-positions = <P_P P_R P_O P_F P_SEMI>;
        bindings = <&m_professional>;
        layers = <0>;
      };

      c_information {
        timeout-ms = <50>;
        key-positions = <P_I P_N P_F P_O P_SEMI>;
        bindings = <&m_information>;
        layers = <0>;
      };

      c_experience {
        timeout-ms = <50>;
        key-positions = <P_X P_P P_SEMI>;
        bindings = <&m_experience>;
        layers = <0>;
      };

      c_because {
        timeout-ms = <50>;
        key-positions = <P_B P_E P_SEMI>;
        bindings = <&m_because>;
        layers = <0>;
      };

      c_development {
        timeout-ms = <50>;
        key-positions = <P_D P_E P_V P_SEMI>;
        bindings = <&m_development>;
        layers = <0>;
      };

      c_govern {
        timeout-ms = <50>;
        key-positions = <P_G P_O P_V>;
        bindings = <&m_govern>;
        layers = <0>;
      };

      c_government_ {
        timeout-ms = <50>;
        key-positions = <P_G P_O P_V P_SEMI>;
        bindings = <&m_government_>;
        layers = <0>;
      };

      c_example {
        timeout-ms = <50>;
        key-positions = <P_E P_X P_M P_P P_L>;
        bindings = <&m_example>;
        layers = <0>;
      };

      c_important {
        timeout-ms = <50>;
        key-positions = <P_I P_M P_P P_T P_SEMI>;
        bindings = <&m_important>;
        layers = <0>;
      };

      c_difference_ {
        timeout-ms = <50>;
        key-positions = <P_D P_I P_F P_S>;
        bindings = <&m_difference_>;
        layers = <0>;
      };

      c_different_ {
        timeout-ms = <50>;
        key-positions = <P_D P_I P_F>;
        bindings = <&m_different_>;
        layers = <0>;
      };

      c_between_ {
        timeout-ms = <50>;
        key-positions = <P_B P_T P_W P_N>;
        bindings = <&m_between_>;
        layers = <0>;
      };

      c_ous {
        timeout-ms = <50>;
        key-positions = <P_S P_DOT>;
        bindings = <&m_ous>;
        layers = <0>;
      };

      c_ment {
        timeout-ms = <50>;
        key-positions = <P_M P_N P_T P_DOT>;
        bindings = <&m_ment>;
        layers = <0>;
      };

      c_ing {
        timeout-ms = <50>;
        key-positions = <P_N P_G P_DOT>;
        bindings = <&m_ing>;
        layers = <0>;
      };

      c_ness {
        timeout-ms = <50>;
        key-positions = <P_N P_S P_DOT>;
        bindings = <&m_ness>;
        layers = <0>;
      };

      c_post {
        timeout-ms = <50>;
        key-positions = <P_P P_O P_COMMA>;
        bindings = <&m_post>;
        layers = <0>;
      };

      c_pre {
        timeout-ms = <50>;
        key-positions = <P_P P_COMMA>;
        bindings = <&m_pre>;
        layers = <0>;
      };

      c_con {
        timeout-ms = <50>;
        key-positions = <P_C P_COMMA>;
        bindings = <&m_con>;
        layers = <0>;
      };

      c_should {
        timeout-ms = <50>;
        key-positions = <P_S P_H P_U P_D>;
        bindings = <&m_should>;
        layers = <0>;
      };

      c_could {
        timeout-ms = <50>;
        key-positions = <P_C P_U P_D>;
        bindings = <&m_could>;
        layers = <0>;
      };

      c_would {
        timeout-ms = <50>;
        key-positions = <P_W P_U P_D>;
        bindings = <&m_would>;
        layers = <0>;
      };

      c_about_ {
        timeout-ms = <50>;
        key-positions = <P_A P_B P_T P_SEMI>;
        bindings = <&m_about_>;
        layers = <0>;
      };

      c_through {
        timeout-ms = <50>;
        key-positions = <P_T P_H P_R P_U>;
        bindings = <&m_through>;
        layers = <0>;
      };

      c_people_ {
        timeout-ms = <50>;
        key-positions = <P_P P_E P_O P_L P_SEMI>;
        bindings = <&m_people_>;
        layers = <0>;
      };

      c_their_ {
        timeout-ms = <50>;
        key-positions = <P_T P_H P_I P_SEMI>;
        bindings = <&m_their_>;
        layers = <0>;
      };

      c_which_ {
        timeout-ms = <50>;
        key-positions = <P_W P_H P_SEMI>;
        bindings = <&m_which_>;
        layers = <0>;
      };

      c_from_ {
        timeout-ms = <50>;
        key-positions = <P_F P_SEMI>;
        bindings = <&m_from_>;
        layers = <0>;
      };

      c_and_ {
        timeout-ms = <50>;
        key-positions = <P_A P_SEMI>;
        bindings = <&m_and_>;
        layers = <0>;
      };

      c_the_ {
        timeout-ms = <50>;
        key-positions = <P_T P_SEMI>;
        bindings = <&m_the_>;
        layers = <0>;
      };

      c_with_ {
        timeout-ms = <50>;
        key-positions = <P_W P_SEMI>;
        bindings = <&m_with_>;
        layers = <0>;
      };

      c_ation_ {
        timeout-ms = <50>;
        key-positions = <P_A P_T P_N P_DOT>;
        bindings = <&m_ation_>;
        layers = <0>;
      };

      c_ization_ {
        timeout-ms = <50>;
        key-positions = <P_I P_Z P_A P_DOT>;
        bindings = <&m_ization_>;
        layers = <0>;
      };

  
    };
};

