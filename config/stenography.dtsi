#include "keypos.h"

/ {
     steno_macros {
        m_because: m_because {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp B &kp E &kp C &kp A &kp U &kp S &kp E &kp SPACE>;
        };

        m_necessar: m_necessar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp N &kp E &kp C &kp E &kp S &kp S &kp A &kp R>;
        };

        m_experience: m_experience {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp E &kp X &kp P &kp E &kp R &kp I &kp E &kp N &kp C &kp E>;
        };

        m_consider: m_consider {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp O &kp N &kp S &kp I &kp D &kp E &kp R>;
        };

        m_determin: m_determin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp D &kp E &kp T &kp E &kp M &kp I &kp N>;
        };

        m_subject: m_subject {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp S &kp U &kp B &kp J &kp E &kp C &kp T>;
        };

        m_character: m_character {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp H &kp A &kp R &kp A &kp C &kp T &kp E &kp R>;
        };

        m_temperature: m_temperature {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp T &kp E &kp M &kp P &kp E &kp R &kp A &kp T &kp U &kp R &kp E>;
        };

        m_brother: m_brother {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp B &kp R &kp O &kp T &kp H &kp E &kp R>;
        };

        m_sister: m_sister {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp S &kp I &kp S &kp T &kp E &kp R>;
        };

        m_express: m_express {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp E &kp X &kp P &kp R &kp E &kp S &kp S>;
        };

        m_instruct: m_instruct {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp I &kp N &kp S &kp T &kp R &kp U &kp C &kp T>;
        };

        m_syllable: m_syllable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp S &kp Y &kp L &kp L &kp A &kp B &kp L &kp E>;
        };

        m_mountain: m_mountain {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp M &kp O &kp U &kp N &kp T &kp A &kp I &kp N>;
        };

        m_particular: m_particular {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp P &kp A &kp R &kp T &kp I &kp C &kp U &kp L &kp A &kp R>;
        };

        m_const: m_const {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp O &kp N &kp S &kp T>;
        };

        m_ion: m_ion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp I &kp O &kp N>;
        };

        m_position: m_position {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp P &kp O &kp S &kp I &kp T &kp I &kp O &kp N>;
        };

        m_comp: m_comp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp O &kp M &kp P>;
        };

        m_Documents: m_Documents {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LSHFT>,
                       <&macro_tap &kp D>,
                       <&macro_release &kp LSHIFT>,
                       <&macro_tap &kp O &kp C &kp U &kp M &kp E &kp N &kp T &kp S>;
        };

        m_document: m_document {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp D &kp O &kp C &kp U &kp M &kp E &kp N &kp T>;
        };

        m_tmux: m_tmux {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp T &kp M &kp U &kp X>;
        };

        m_process: m_process {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp P &kp R &kp O &kp C &kp E &kp S &kp S>;
        };

        m_create: m_create {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp R &kp E &kp A &kp T &kp E>;
        };

        m_output: m_output {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp O &kp U &kp T &kp P &kp U &kp T>;
        };

        m_written: m_written {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp W &kp R &kp I &kp T &kp T &kp E &kp N>;
        };

        m_brown: m_brown {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp B &kp R &kp O &kp W &kp N>;
        };

        m_remember: m_remember {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp R &kp E &kp M &kp E &kp M &kp B &kp E &kp R>;
        };

        m_tion: m_tion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp T &kp I &kp O &kp N>;
        };

        m_condition: m_condition {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp O &kp N &kp D &kp I &kp T &kp I &kp O &kp N>;
        };

        m_cond: m_cond {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp O &kp N &kp D>;
        };

        m_represent: m_represent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp R &kp E &kp P &kp R &kp E &kp S &kp E &kp N &kp T>;
        };

        m_circle: m_circle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp C &kp I &kp R &kp C &kp L &kp E>;
        };

        m_design: m_design {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp D &kp E &kp S &kp I &kp G &kp N>;
        };

        m_insta: m_insta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp I &kp N &kp S &kp T &kp A>;
        };

        m_substan: m_substan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp S &kp U &kp B &kp S &kp T &kp A &kp N>;
        };

        m_original: m_original {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp O &kp R &kp I &kp G &kp I &kp N &kp A &kp L>;
        };

        m_piece: m_piece {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp P &kp I &kp E &kp C &kp E>;
        };

        m_difference: m_difference {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp D &kp I &kp F &kp F &kp E &kp R &kp E &kp N &kp C &kp E>;
        };

        m_differential: m_differential {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp D &kp I &kp F &kp F &kp E &kp R &kp E &kp N &kp T &kp I &kp L>;
        };
     };
  
    steno_combos {
        compatible = "zmk,combos";

        c_because {
            timeout-ms = <50>;
            key-positions = <P_E P_B>; 
            bindings = <&m_because>;
            layers = <0>;
        };

        c_necessar {
            timeout-ms = <50>;
            key-positions = <P_N P_E P_C>; 
            bindings = <&m_necessar>;
            layers = <0>;
        };

        c_experience {
            timeout-ms = <50>;
            key-positions = <P_X P_P>; 
            bindings = <&m_experience>;
            layers = <0>;
        };

        c_consider {
            timeout-ms = <50>;
            key-positions = <P_C P_O P_N P_S>; 
            bindings = <&m_consider>;
            layers = <0>;
        };

        c_determin {
            timeout-ms = <50>;
            key-positions = <P_D P_E P_T P_R>; 
            bindings = <&m_determin>;
            layers = <0>;
        };

        c_subject {
            timeout-ms = <50>;
            key-positions = <P_S P_U P_B P_J>; 
            bindings = <&m_subject>;
            layers = <0>;
        };

        c_character {
            timeout-ms = <50>;
            key-positions = <P_C P_H P_A P_R>; 
            bindings = <&m_character>;
            layers = <0>;
        };

        c_temperature {
            timeout-ms = <50>;
            key-positions = <P_T P_E P_M P_P>; 
            bindings = <&m_temperature>;
            layers = <0>;
        };

        c_brother {
            timeout-ms = <50>;
            key-positions = <P_B P_R P_O>;
            bindings = <&m_brother>;
            layers = <0>;
        };

        c_sister {
            timeout-ms = <50>;
            key-positions = <P_S P_I P_R P_T>;
            bindings = <&m_sister>;
            layers = <0>;
        };

        c_express {
            timeout-ms = <50>;
            key-positions = <P_E P_X P_S>;
            bindings = <&m_express>;
            layers = <0>;
        };

        c_instruct {
            timeout-ms = <50>;
            key-positions = <P_I P_N P_S P_T P_U>;
            bindings = <&m_instruct>;
            layers = <0>;
        };

        c_syllable {
            timeout-ms = <50>;
            key-positions = <P_S P_Y P_L P_A>;
            bindings = <&m_syllable>;
            layers = <0>;
        };

        c_mountain {
            timeout-ms = <50>;
            key-positions = <P_M P_O P_U P_T P_A>;
            bindings = <&m_mountain>;
            layers = <0>;
        };

        c_particular {
            timeout-ms = <50>;
            key-positions = <P_P P_A P_R P_T>;
            bindings = <&m_particular>;
            layers = <0>;
        };

        c_const {
            timeout-ms = <50>;
            key-positions = <P_C P_O P_N P_S P_T>;
            bindings = <&m_const>;
            layers = <0>;
        };

        c_ion {
            timeout-ms = <50>;
            key-positions = <P_I P_O P_N>;
            bindings = <&m_ion>;
            layers = <0>;
        };

        c_position {
            timeout-ms = <50>;
            key-positions = <P_P P_O P_S>;
            bindings = <&m_position>;
            layers = <0>;
        };

        c_comp {
            timeout-ms = <50>;
            key-positions = <P_C P_O P_M P_P>;
            bindings = <&m_comp>;
            layers = <0>;
        };

        c_Documents {
            timeout-ms = <50>;
            key-positions = <P_D P_O P_C P_SEMI>;
            bindings = <&m_Documents>;
            layers = <0>;
        };

        c_document {
            timeout-ms = <50>;
            key-positions = <P_D P_O P_C>;
            bindings = <&m_document>;
            layers = <0>;
        };

        c_tmux {
            timeout-ms = <50>;
            key-positions = <P_T P_M P_X>;
            bindings = <&m_tmux>;
            layers = <0>;
        };

        c_process {
            timeout-ms = <50>;
            key-positions = <P_P P_R P_O P_C P_S>;
            bindings = <&m_process>;
            layers = <0>;
        };

        c_create {
            timeout-ms = <50>;
            key-positions = <P_C P_R P_E P_T>;
            bindings = <&m_create>;
            layers = <0>;
        };

        c_output {
            timeout-ms = <0>;
            key-positions = <P_O P_U P_T P_P>;
            bindings = <&m_output>;
            layers = <0>;
        };

        c_written {
            timeout-ms = <0>;
            key-positions = <P_W P_R P_I P_T P_N>;
            bindings = <&m_written>;
            layers = <0>;
        };

        c_brown {
            timeout-ms = <0>;
            key-positions = <P_B P_R P_O P_W P_N>;
            bindings = <&m_brown>;
            layers = <0>;
        };

        c_remember {
            timeout-ms = <0>;
            key-positions = <P_R P_M P_B>;
            bindings = <&m_remember>;
            layers = <0>;
        };

        c_tion {
            timeout-ms = <0>;
            key-positions = <P_T P_I P_O P_N>;
            bindings = <&m_tion>;
            layers = <0>;
        };

        c_condition {
            timeout-ms = <0>;
            key-positions = <P_C P_O P_N P_D P_I>;
            bindings = <&m_condition>;
            layers = <0>;
        };

        c_cond {
            timeout-ms = <0>;
            key-positions = <P_C P_O P_N P_D>;
            bindings = <&m_cond>;
            layers = <0>;
        };

        c_represent {
            timeout-ms = <0>;
            key-positions = <P_R P_E P_P P_S>;
            bindings = <&m_represent>;
            layers = <0>;
        };

        c_circle {
            timeout-ms = <0>;
            key-positions = <P_C P_I P_R P_L P_E>;
            bindings = <&m_circle>;
            layers = <0>;
        };

        c_design {
            timeout-ms = <0>;
            key-positions = <P_D P_E P_S P_I P_G P_N>;
            bindings = <&m_design>;
            layers = <0>;
        };

        c_insta {
            timeout-ms = <0>;
            key-positions = <P_I P_N P_S P_T P_A>;
            bindings = <&m_insta>;
            layers = <0>;
        };

        c_substan {
            timeout-ms = <0>;
            key-positions = <P_S P_U P_B P_T>;
            bindings = <&m_substan>;
            layers = <0>;
        };

        c_original {
            timeout-ms = <0>;
            key-positions = <P_O P_G>;
            bindings = <&m_original>;
            layers = <0>;
        };

        c_piece {
            timeout-ms = <0>;
            key-positions = <P_P P_I P_E P_C>;
            bindings = <&m_piece>;
            layers = <0>;
        };

        c_difference {
            timeout-ms = <0>;
            key-positions = <P_D P_I P_F>;
            bindings = <&m_difference>;
            layers = <0>;
        };

        c_differential {
            timeout-ms = <0>;
            key-positions = <P_D P_I P_F P_L>;
            bindings = <&m_differential>;
            layers = <0>;
        };
    };
};


